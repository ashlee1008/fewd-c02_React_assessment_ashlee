{"ast":null,"code":"var _jsxFileName = \"/Users/s/Downloads/codecademy-jammming-master/jamming/src/Components/App/App.js\";\nimport React from 'react';\nimport { BaseComponent } from '../BaseComponent/BaseComponent';\nimport Spotify from '../../util/Spotify';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSpotify.getAccessToken();\n\nclass App extends BaseComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: 'My playlist',\n      playlistTracks: []\n    };\n\n    this._bind('updatePlaylistName', 'addTrack', 'removeTrack', 'savePlaylist', 'search');\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  addTrack(track) {\n    if (!this.state.playlistTracks.find(playlistTrack => playlistTrack.id === track.id)) {\n      this.setState(prevState => ({\n        playlistTracks: [...prevState.playlistTracks, track]\n      }));\n    }\n  }\n\n  removeTrack(track) {\n    this.setState({\n      playlistTracks: this.state.playlistTracks.filter(playlistTrack => playlistTrack.id !== track.id)\n    });\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(playlistTrack => playlistTrack.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris);\n    this.setState({\n      searchResults: []\n    });\n    this.updatePlaylistName('My playlist');\n    console.info(trackUris);\n  }\n\n  search(term) {\n    Spotify.search(term).then(searchResults => this.setState({\n      searchResults: searchResults\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"mmm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), \"ing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: this.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-playlist\",\n          children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n            searchResults: this.state.searchResults,\n            onAdd: this.addTrack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n            name: this.state.playlistName,\n            tracks: this.state.playlistTracks,\n            onRemove: this.removeTrack,\n            onNameChange: this.updatePlaylistName,\n            onSave: this.savePlaylist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/s/Downloads/codecademy-jammming-master/jamming/src/Components/App/App.js"],"names":["React","BaseComponent","Spotify","SearchBar","SearchResults","Playlist","getAccessToken","App","constructor","props","state","searchResults","playlistName","playlistTracks","_bind","updatePlaylistName","name","setState","addTrack","track","find","playlistTrack","id","prevState","removeTrack","filter","savePlaylist","trackUris","map","uri","console","info","search","term","then","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BaseComponent } from '../BaseComponent/BaseComponent';\nimport Spotify from '../../util/Spotify';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport './App.css';\n\nSpotify.getAccessToken();\n\nclass App extends BaseComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: 'My playlist',\n      playlistTracks: []\n    }\n    this._bind('updatePlaylistName', 'addTrack', 'removeTrack', 'savePlaylist', 'search');\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  addTrack(track) {\n    if (!this.state.playlistTracks.find(playlistTrack => playlistTrack.id === track.id)) {\n      this.setState(prevState => ({\n        playlistTracks: [...prevState.playlistTracks, track]\n      }));\n    }\n  }\n\n  removeTrack(track) {\n    this.setState({\n      playlistTracks: this.state.playlistTracks.filter(playlistTrack => playlistTrack.id !== track.id)\n    });\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(playlistTrack => playlistTrack.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris);\n    this.setState({\n      searchResults: []\n    });\n    this.updatePlaylistName('My playlist');\n    console.info(trackUris);\n  }\n\n  search(term) {\n    Spotify.search(term)\n      .then(searchResults => this.setState({\n        searchResults: searchResults\n      }));\n  }\n  \n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack} />\n            <Playlist\n              name={this.state.playlistName}\n              tracks={this.state.playlistTracks}\n              onRemove={this.removeTrack}\n              onNameChange={this.updatePlaylistName}\n              onSave={this.savePlaylist} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}